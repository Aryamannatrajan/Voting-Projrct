/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clientvoter;

/**
 *
 * @author abhimanyuyadav
 */
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.Socket;
import javax.swing.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;



 


public class ClFrame1 extends javax.swing.JFrame {

    /**
     * Creates new form ClFrame1
     */
    String ip = "";
    ArrayList<String> candidateName;
    ArrayList<Image> candidatePhoto;
    ArrayList<String> candidateHouse;
    
   
    public ClFrame1() {
        super("TBSVoting: Voter");
        initComponents();
   
        jPanel3.setBackground(new Color(255,255,255,0));
         jLabel5.setVisible(false);
     ip1.setVisible(false);
     ip2.setVisible(false);
     ip3.setVisible(false);
     ip4.setVisible(false);
     factor.setVisible(false);
        
        jPassword1.setEchoChar('â€¢');
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPassword1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ip1 = new javax.swing.JTextField();
        ip2 = new javax.swing.JTextField();
        ip3 = new javax.swing.JTextField();
        ip4 = new javax.swing.JTextField();
        factor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(165, 29, 34));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Toppan Bunkyu Midashi Mincho", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LOGIN");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jPassword1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 10), new java.awt.Color(0, 0, 0))); // NOI18N
        jPassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPassword1ActionPerformed(evt);
            }
        });
        jPassword1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPassword1KeyTyped(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(51, 51, 51));
        jCheckBox1.setText("Show Password");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Forgot Password?");
        jButton2.setBorder(null);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clientvoter/Bishop logo.jpg"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 153));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Voter");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jButton3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(70, 70, 70)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jButton3)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton2)))
        );

        jLabel3.setBackground(new java.awt.Color(255, 204, 51));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 204, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("THE BISHOP'S SCHOOL,PUNE");

        jPanel3.setBackground(new Color(255,255,255,123));
        jPanel3.setForeground(new java.awt.Color(204, 204, 204));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Enter IP Key");

        ip1.setFont(new java.awt.Font("Helvetica", 0, 27)); // NOI18N
        ip1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        ip1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ip1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ip1FocusLost(evt);
            }
        });
        ip1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ip1ActionPerformed(evt);
            }
        });
        ip1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ip1KeyTyped(evt);
            }
        });

        ip2.setFont(new java.awt.Font("Helvetica", 0, 27)); // NOI18N
        ip2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        ip2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ip2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ip2FocusLost(evt);
            }
        });
        ip2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ip2KeyTyped(evt);
            }
        });

        ip3.setFont(new java.awt.Font("Helvetica", 0, 27)); // NOI18N
        ip3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        ip3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ip3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ip3FocusLost(evt);
            }
        });
        ip3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ip3KeyTyped(evt);
            }
        });

        ip4.setFont(new java.awt.Font("Helvetica", 0, 27)); // NOI18N
        ip4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ip4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 3));
        ip4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ip4FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ip4FocusLost(evt);
            }
        });
        ip4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ip4KeyTyped(evt);
            }
        });

        factor.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        factor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        factor.setText("Two-Factor Authentication");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ip2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ip3)
                        .addGap(18, 18, 18)
                        .addComponent(ip4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(factor, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(factor, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ip1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ip4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 455, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 611, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private  int First(String password) throws SQLException
{
    
    
   DriverManager.registerDriver(new com.mysql.cj.jdbc.Driver());
    String urL = "jdbc:mysql://localhost:3306/TBS?zeroDateTimeBehavior=CONVERT_TO_NULL";
    String pass = "TBS@admin123";
    String username = "root";
    
    int val = 0;
    try
    {
        Connection conn  = DriverManager.getConnection(urL, username, pass);
        Statement st = conn.createStatement();
        String q1 = "SELECT * FROM VOTERSDATA";
        ResultSet rs = st.executeQuery(q1);
        while(rs.next())
        {
            int b;
            b = rs.getInt("COMPCODE");
            if(b==Integer.valueOf(password))
            {
                val = 1;
                break;
            }
            
        }
        
    }
    catch(SQLException ex)
    {
        System.out.println(ex);
//        JOptionPane.showMessageDialog(null,"Error Connecting");
//        JOptionPane.showMessageDialog(null,"Wrong Password");
        return -1;
    }
    return val;
}
    private void jPassword1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPassword1ActionPerformed
        
       String pass=jPassword1.getText();
       if(pass.equals(""))
       {
           JOptionPane.showMessageDialog(null, "Enter Password");
       }
       else
       {
  
           Thread t = new Thread(){
             
               @Override
               public void run(){
                   try
            {
            //    Socket a = new Socket(ip,8080);
                 switch (First(pass)) {
                case 1:
                   jPanel3.setBackground(new Color(255,255,255,123));
                   jLabel5.setVisible(true);
                   factor.setVisible(true);
                   ip1.setVisible(true);
                   ip2.setVisible(true);
                   ip3.setVisible(true);
                   ip4.setVisible(true);
                   ip1.requestFocus();
                    break;

                case 0:
                    JOptionPane.showMessageDialog(null,"Incorrect Password");
                    
                    break;
                default:
                    JOptionPane.showMessageDialog(null,"Error Connecting");
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(ClFrame1.class.getName()).log(Level.SEVERE, null, ex);
        
            }
            catch(HeadlessException e)
            {
                JOptionPane.showMessageDialog(null,"Incorrect Password!");
            }
                   
               }
               
           };   
           t.start();
       }
            
        
    }//GEN-LAST:event_jPassword1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected())
        {
            jPassword1.setEchoChar((char)0);
        }
        else if(!(jCheckBox1.isSelected()))
        {
            jPassword1.setEchoChar('â€¢');
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed
int IPKeyCtr = 0;
    private void ip1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip1FocusGained
ip1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3));
     
    }//GEN-LAST:event_ip1FocusGained

    private void ip2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip2FocusGained
ip2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3));
     
    }//GEN-LAST:event_ip2FocusGained

    private void ip3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip3FocusGained
      ip3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3));
    }//GEN-LAST:event_ip3FocusGained

    private void ip4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip4FocusGained
      ip4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 255), 3));
    }//GEN-LAST:event_ip4FocusGained

    private void ip1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip1FocusLost
 ip1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3));
    }//GEN-LAST:event_ip1FocusLost

    private void ip2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip2FocusLost
 ip2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3));        // TODO add your handling code here:
    }//GEN-LAST:event_ip2FocusLost

    private void ip3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip3FocusLost
 ip3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3));        // TODO add your handling code here:
    }//GEN-LAST:event_ip3FocusLost

    private void ip4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ip4FocusLost
 ip4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 3));        // TODO add your handling code here:
    }//GEN-LAST:event_ip4FocusLost

    private void ip1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ip1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ip1ActionPerformed
int cntr = 0;
int cntr2 = 0;
int cntr3 = 0;
int cntr4 = 0;
    private void ip1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip1KeyTyped
 String TEXT = "";
 char ch = evt.getKeyChar();
 //System.out.println(ch);
 TEXT = ip1.getText();
 if(ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE)
     if(cntr>0)
         cntr--;
 if(cntr <= 2)
 {
    // System.out.println("If 1 executed");
     if(Character.isDigit(ch))
     {
        // System.out.println("If char executed");
         cntr++;
     }
     else
         evt.consume();
 }
 else evt.consume();
 TEXT = ip1.getText();
 if(cntr>=3)
 {
    //  System.out.println("If 2 executed");
     ip2.requestFocus();
 }
 
 
    }//GEN-LAST:event_ip1KeyTyped

    private void ip2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip2KeyTyped
 String TEXT = "";
 char ch = evt.getKeyChar();
 //System.out.println(ch);
 TEXT = ip2.getText();
 if(ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE)
     if(cntr2>0)
         cntr2--;
 if(cntr2 <= 2)
 {
    // System.out.println("If 1 executed");
     if(Character.isDigit(ch))
     {
        
         cntr2++;
     }
     else
         evt.consume();
 }
 else evt.consume();
 TEXT = ip2.getText();
 if(cntr2>=3)
 {
    //  System.out.println("If 2 executed");
     ip3.requestFocus();
 }
 
    }//GEN-LAST:event_ip2KeyTyped

    private void ip3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip3KeyTyped
String TEXT = "";
 char ch = evt.getKeyChar();
 //System.out.println(ch);
 TEXT = ip3.getText();
 if(ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE)
     if(cntr3>0)
         cntr3--;
 if(cntr3 <= 2)
 {
    // System.out.println("If 1 executed");
     if(Character.isDigit(ch))
     {
        // System.out.println("If char executed");
         cntr3++;
     }
     else
         evt.consume();
 }
 else evt.consume();
 if(cntr3>=3)
 {
    //  System.out.println("If 2 executed");
     ip4.requestFocus();
 }
 
    }//GEN-LAST:event_ip3KeyTyped
String text = "";
    private void ip4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ip4KeyTyped

 char ch = evt.getKeyChar();
 //System.out.println(ch);
 text = ip4.getText();
 if(ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE)
     if(cntr4>0)
         cntr4--;
 if(cntr4 <= 2)
 {
    // System.out.println("If 1 executed");
     if(Character.isDigit(ch))
     {
        // System.out.println("If char executed");
         cntr4++;
     }
     else
         evt.consume();
 }
 else evt.consume();
 text = ip4.getText();
 
        
 if(cntr4>=3)
 {
     text = text+ch;

 ClFrame1 inst = this;
     Thread t2 = new Thread(){
         
         @Override
         public void run()
         {
             try {
         Thread.sleep(500);
     } catch (InterruptedException ex) {
         Logger.getLogger(ClFrame1.class.getName()).log(Level.SEVERE, null, ex);
     }
             inst.getIP(text);
     jPanel3.setBackground(new Color(255,255,255,0));
         jLabel5.setVisible(false);
     ip1.setVisible(false);
     ip2.setVisible(false);
     ip3.setVisible(false);
     ip4.setVisible(false);
     factor.setVisible(false);
     
             try {
                 if(validateIP() == true)
                 {
                     //System.out.println("Valid IP");
                     ClFrame2 clframe2 = new ClFrame2();
                     clframe2.setVisible(true);
                     inst.setVisible(false);
                     Thread t1 = new Thread(new sendVote(ip));
                     t1.start();
                     jPanel3.setVisible(false);
                 }
                 else if(Ip.IP()==null)
                 {
                     JOptionPane.showMessageDialog(null, "Check your Internet Connection!", "Network unavailable!", JOptionPane.ERROR_MESSAGE);
                     new ClFrame1().setVisible(true);
                     inst.setVisible(false);
                 }
                 else
                 {
                     
                     JOptionPane.showMessageDialog(null, "The following might be the possibilities for the error:\n\n- Voting has not started\n- The IP Key is invalid", "An error occured!", JOptionPane.ERROR_MESSAGE);
                     
                     new ClFrame1().setVisible(true);
                     inst.setVisible(false);
                 }       } catch (IOException ex) {
                 Logger.getLogger(ClFrame1.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
     };
     t2.start();
 }
 
    }//GEN-LAST:event_ip4KeyTyped

    private void jPassword1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPassword1KeyTyped
 
        char ch = evt.getKeyChar();
        if(Character.isDigit(ch)||ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE|| ch == KeyEvent.VK_ENTER)
        {
            
        }
        else
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
            
    }//GEN-LAST:event_jPassword1KeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   String pass=jPassword1.getText();
       if(pass.equals(""))
       {
           JOptionPane.showMessageDialog(null, "Enter Password");
       }
       else
       {
  
           Thread t = new Thread(){
             
               @Override
               public void run(){
                   try
            {
            //    Socket a = new Socket(ip,8080);
                 switch (First(pass)) {
                case 1:
                   jPanel3.setBackground(new Color(255,255,255,123));
                   jLabel5.setVisible(true);
                   factor.setVisible(true);
                   ip1.setVisible(true);
                   ip2.setVisible(true);
                   ip3.setVisible(true);
                   ip4.setVisible(true);
                   ip1.requestFocus();
                    break;

                case 0:
                    JOptionPane.showMessageDialog(null,"Incorrect Password");
                    
                    break;
                default:
                    JOptionPane.showMessageDialog(null,"Error Connecting");
                    break;
            }
        } catch (SQLException ex) {
            Logger.getLogger(ClFrame1.class.getName()).log(Level.SEVERE, null, ex);
        
            }
            catch(HeadlessException e)
            {
                JOptionPane.showMessageDialog(null,"Incorrect Password!");
            }
                   
               }
               
           };   
           t.start();
       }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public void getIP(String text)
    {
        ip = ip1.getText()+"."+ip2.getText()+"."+ip3.getText()+"."+text;
        System.out.println(ip);
    }
    public boolean validateIP()throws IOException
    {
        Socket s;
        try
        {
            s = new Socket(ip,8080);
            s.close();
            return true; // Connection Present Voting in progress
        }
        catch(java.net.ConnectException ce)
        {
           // s.close();
            System.out.println(ce);
            return false; // Voting not started
        } 
        catch(java.net.SocketException se)
        {
            
            return false;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])  {
         
      
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
             UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
             
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ClFrame1.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(() -> {
            new ClFrame1().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel factor;
    private javax.swing.JTextField ip1;
    private javax.swing.JTextField ip2;
    private javax.swing.JTextField ip3;
    private javax.swing.JTextField ip4;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPassword1;
    // End of variables declaration//GEN-END:variables
}
/*
String text = ipkey.getText();
char ch = evt.getKeyChar();


if(text.equals(""))
{
    IPKeyCtr = 0;
    
}
if(text.length() < 15)
{
if(Character.isDigit(ch)||ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE)
 {
    if(ch == KeyEvent.VK_BACK_SPACE||ch==KeyEvent.VK_DELETE) 
    {
        IPKeyCtr--;
        return;
  // System.out.println(IPKeyCtr); 
    }
    else
    {
        IPKeyCtr++;
     //   System.out.println(IPKeyCtr); 
    }

        
        if(IPKeyCtr%3==1&&IPKeyCtr!=1&&IPKeyCtr!=15)
        {
            text = ipkey.getText();
            ipkey.setText(text+".");
        }
 }
else
{
    Toolkit.getDefaultToolkit().beep();
    evt.consume();
    
}
}

else
{
    Toolkit.getDefaultToolkit().beep();
    evt.consume();
    
}

*/